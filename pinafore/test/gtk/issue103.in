#!/usr/bin/pinafore

let

closedtype T = MkT Entity !"MkT";
t: T;
t = MkT (let opentype E in openEntity @E !"t");

tset: FiniteSetRef T;
tset = property @T @() !"tset" !@ {()};
tprop = property @T @Text !"tprop";

f_table: FiniteSetRef {a,+T} -> (a -> Action Any) -> Maybe (WholeRef {a,+T}) -> UI;
f_table = uiListTable [] (refOrders []);

f_ui: FiniteSetRef T -> Action UI;
f_ui set = do
    ref <- newMemWhole;
    return $ uiHorizontal [(False,f_table set (\_ -> return ()) (Just ref)),(True,uiLabel (tprop !$% ref))]
    end;

in do
    tset += t;
    ui <- f_ui tset;
    w <- openWindow (600,800) {"Window"} {[]} ui;
    closeWindow w;
    outputLn "LAST";
    end
