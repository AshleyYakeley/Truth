let e1: Entity; e1 = ()
:type e1
let f: WholeRef a -> (); f _ = ()
:type f
let m1 = newMemWhole >>= \ref -> return (ref, ())
:type m1
let m2 = newMemWhole >>= \ref -> return (ref, ((\_ -> ()) : WholeRef a -> ()) ref)
:type m2
let m3 = newMemWhole >>= \ref -> return (ref, f ref)
:type m3
