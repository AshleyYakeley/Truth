# Run "pinafore --doc" to see all predefined bindings.

let

### Useful
ui_page n ui = (ui_label n,ui);
ui_labelled n ui = ui_horizontal [(ui_label n,False),(ui,True)];

openmywindow :: Ref +Text -> UI a -> Action Window;
openmywindow title contents = afix $ \window -> let
    menus :: [MenuItem];
    menus =
        [
            menu_submenu "File"
            [
                menu_action "Close" $ closewindow window
            ]
        ]
    in openwindow title $ ui_vertical
    [
        (ui_menubar menus,False),
        (ui_scrolled contents,True)
    ];

### People

# Ontology

opentype Type;
opentype Person;

type = property @Person @Type !f06efa5e-190f-4e5d-8633-495c5683c124;
name = property @Person @Text !498260df-6a8a-44f0-b285-68a63565a33b;

people = type !@ {entity @Type !78baed51-cb05-46b5-bcb4-49031532b890};

mother = property @Person @Person !3afce58f-b7eb-4b11-8a75-2d66afd4d085;
father = property @Person @Person !c005705f-9259-4d24-9713-db28a6e4f7d5;
# parents :: Ref Person -> Set Person;
# parents p = (mother !$ p) \/ (father !$ p);
children :: Ref Person -> Set Person;
children p = mother !@ p \/ father !@ p;

employer = property @Person @Person !72f612af-ae47-4c18-b3df-6932ae914f62;

email = property @Person @Text !8649b74c-123e-4ece-be3b-b734b0db3ea7;

phone = property @Person @Text !83dfc88b-7b5b-4262-a548-0af84d5e3b63;

opentype Location;
home = property @Person @Location !b4f7736e-2db4-486c-aae5-b6a9b1035fd0;
address = property @Location @Text !fd83bef7-145c-4e40-a2d6-938bb5fb6da1;
locphone = property @Location @Text !83dfc88b-7b5b-4262-a548-0af84d5e3b63;
city = property @Location @Text !55c84133-64f2-47a6-8b3c-e01256ec9779;
postcode = property @Location @Text !80f99100-407b-4a6b-a4f0-a025c94132b3;
province = property @Location @Text !dffae424-28d5-4543-b1b2-b8a744bbc0cd;
country = property @Location @Text !1257c340-0ec1-4ff7-9fd8-d2eaa7822463;

birthdate = property @Person @Text !b711b9b3-b43c-4ff6-be12-3291cc6b050a;
deathdate = property @Person @Text !805a9e65-d69a-4261-9c94-a3249885b6bb;
married = property @Person @Boolean !380ac576-9252-4783-b2d8-db222c683a22;

# UI
ui_people :: Set Person -> UI Person;
ui_people pp = ui_withselection $ \getperson -> ui_vertical
[
    (ui_button {"New Person"} $ newentity pp >>= window_person,False),
    (ui_button {"View Person"} $ getperson >>= window_person,False),
    (ui_button {"Remove Person"} $ getperson >>= \p -> pp -= p,False),
    (ui_table [({"Name"},\p -> name !$ {p})] pp $ window_person,True)
];

ui_person :: Ref Person -> UI None;
ui_person p = ui_ignore $ui_vertical
[
    (ui_labelled {"Name: "} $ ui_textentry $ name !$ p,False),
    (ui_pages
    [
        ui_page {"Social"} $ ui_vertical
        [
            (ui_labelled {"Email: "} $ ui_textentry $ email !$ p,False),
            (ui_labelled {"Phone: "} $ ui_textentry $ phone !$ p,False)
        ],
        ui_page {"Home"} $ let homep = home !$ p in ui_vertical
        [
            (ui_labelled {"Address: "} $ ui_textarea $ address !$ homep,False),
            (ui_labelled {"City: "} $ ui_textentry $ city !$ homep,False),
            (ui_labelled {"Postcode/ZIP: "} $ ui_textentry $ postcode !$ homep,False),
            (ui_labelled {"State/Province: "} $ ui_textentry $ province !$ homep,False),
            (ui_labelled {"Country: "} $ ui_textentry $ country !$ homep,False),
            (ui_labelled {"Phone: "} $ ui_textentry $ locphone !$ homep,False)
        ],
        ui_page {"Work"} $ ui_vertical
        [
            (ui_labelled {"Employer: "} $ ui_textentry $ (name !. employer) !$ p,False)
        ],
        ui_page {"Family"} $ ui_vertical
        [
            (ui_labelled {"Birth: "} $ ui_textentry $ birthdate !$ p,False),
            (ui_labelled {"Death: "} $ ui_textentry $ deathdate !$ p,False),
            (ui_booleancheckbox {"Married"} $ married !$ p,False),
            (ui_labelled {"Mother: "} $ ui_pick name people $ mother !$ p,False),
            (ui_labelled {"Father: "} $ ui_pick name people $ father !$ p,False),
            (ui_people $ children p,True)
        ]
    ],True)
];

window_person :: Person -> Action Window;
window_person p = openmywindow (name !$ {p}) (ui_person {p});

window_people :: Action Window;
window_people = openmywindow {"People"} (ui_people people);

### Calculator

window_calc :: Action Window;
window_calc = let
opentype P;
pvalue = property @P @Number !"pvalue";
aval = pvalue !$ {entity @P !a4706230-2c61-44b1-b600-516e7a54c607};
bval = pvalue !$ {entity @P !9d284ad2-e141-4114-ae50-8829a6db710f};
in openmywindow {"Calc"} $ ui_vertical
[
    #(ui_textentry aval,False),
    #(ui_textentry bval,False),
    #(ui_label $ aval / bval,False)
];

### Switching Value

window_switch :: Action Window;
window_switch = let
opentype P;
pbool = property @P @Boolean !"pbool";
ptext = property @P @Text !"ptext";
sw_pick = pbool !$ {entity @P !59eb2d87-f815-47ef-b7dc-8fe434151bb6};
sw_val1 = ptext !$ {entity @P !6d9f7afa-1091-49cc-8646-8e613bb75ee5};
sw_val2 = ptext !$ {entity @P !934712ae-73a7-4084-8a43-d618c737fd56};
in openmywindow {"Switch"} $ ui_vertical
[
    #(ui_textentry sw_pick,False),
    (ui_booleancheckbox {"pick"} sw_pick,False),
    (ui_dynamic {if %sw_pick then ui_textarea sw_val1 else ui_textarea sw_val2},True)
];

### Imported Files

window_files :: Action Window;
window_files = let
#Files = @type !f649e7d7-7e98-4c86-919c-34f52ac12c7a;
#caption = %4a8ca041-a67d-4a1e-b212-9243fca635b0;
window_file f = openmywindow {"File"} $ ui_vertical
[
    #(ui_textentry $ caption f,False)
];
in openmywindow {"Files"} $ ui_vertical
[
    #(ui_button "Import" $ file_import Files $ \f -> openmywindow $ window_file f,False),
    #(ui_table [column "Caption" caption, column "Size" file_size] window_file Files,True)
];

### Constant Edit

window_constant :: Action Window;
window_constant = openmywindow {"Constant"} $ ui_vertical
[
    (ui_booleancheckbox {"off"} {False},False),
    (ui_booleancheckbox {"on"} {True},False),
    (ui_textentry {"constant"},False),
    (ui_textarea {"constant"},True)
];

### Start Window

window_start :: Action Window;
window_start = openmywindow {"Pinafore"} $ ui_vertical
[
    (ui_button {"People"} window_people,False),
    (ui_button {"Calculated Form"} window_calc,False),
    (ui_button {"Switch"} window_switch,False),
    (ui_button {"Files"} window_files,False),
    (ui_button {"Constant"} window_constant,False),
    (ui_blank,True)
];

in do
    window_start;
    return ();
    end
