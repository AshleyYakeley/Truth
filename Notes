1. Applications

1.1 Rich Text

operations:
display
selection -- could enforce tree-ness
insert/replace text

1.1.1 General
type RichText = [RichItem]
data RichItem = RIText Text | RIObject Object | RIStyled Style RichText

normalisation: glue successive RIText items
addressing?
conformance to schema, e.g. headings, paragraphs, etc.

1.1.2 Note style (paragraph-based)
data Note = MkNote NoteStyle [Paragraph] -- NonEmpty?
data Paragraph = NP ParagraphStyle [Item] -- NonEmpty?
data Item = ItemText TextStyle Text | ItemObject Object

NoteStyleNote (NoteStyle -> NoteStyle)
NoteReplaceParagraphs ParagraphSelection [Paragraph]
NoteStyleParagraphs ParagraphSelection (ParagraphStyle -> ParagraphStyle)
NoteReplaceItems ItemSelection [Item]
NoteStyleItems ItemSelection (TextStyle -> TextStyle)


data Styled style item = MkStyled style (NonEmpty item);
type Note = Styled NoteStyle Paragraph;
type Paragraph = Styled ParagraphStyle Run;
type Run = Styled RunStyle Item
data Item = TextItem Text | ObjectItem Object

1.2 Tabular

Row has a type; bag or list of rows, by key
Can combine tables, with editing., e.g. joins, unions
