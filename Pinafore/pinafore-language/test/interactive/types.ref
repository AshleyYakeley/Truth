pinafore> entitytype P
pinafore> entitytype Q
pinafore> subtype P <: Q
pinafore> p = !{point.OpenEntity @P !"p"}
pinafore> q = !{point.OpenEntity @Q !"q"}
pinafore> with Attribute
pinafore> with Store
pinafore> store <- openTemp.Store
pinafore> pp = !{property @P @P !"pp"} store
pinafore> qp = !{property @Q @P !"qp"} store
pinafore> :t pp
: Property P P
pinafore> :t pp !$ ap{p}
: WholeModel P
pinafore> :t pp !$ ap{q}
<input>:13:7: no ground conversion for Q <: P
pinafore> :t qp !$ ap{p}
: WholeModel P
pinafore> :t qp !$ ap{q}
: WholeModel P
pinafore> :t fn x => x <> x
: List a -> List a
pinafore> f = fn x => x <> x
pinafore> :t f
: List a -> List a
pinafore> :t fn x => x <>.List1 x
: List1.List a -> List1.List a
pinafore> g = fn x => x <>.List1 x
pinafore> :t g
: List1.List a -> List1.List a
pinafore> :t uu
: uu: a, a
pinafore> :t uu + 1
: uu: Integer, Integer
pinafore> :t ?uu
: ?uu: a, a
pinafore> :t ?uu + 1
: ?uu: Integer, Integer
pinafore> :t ?uu + ?uu + 1
: ?uu: Integer, Integer
pinafore> <END>
