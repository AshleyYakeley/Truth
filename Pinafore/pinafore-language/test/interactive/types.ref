pinafore> let opentype P
pinafore> let opentype Q
pinafore> let subtype P <: Q
pinafore> let p = openEntity @P !"p"
pinafore> let q = openEntity @Q !"q"
pinafore> let pp = property @P @P !"pp"
pinafore> let qp = property @Q @P !"qp"
pinafore> :t pp
: P ~> P
pinafore> :t pp !$ {p}
: WholeRef P
pinafore> :t pp !$ {q}
<input>:10:7: cannot convert WholeRef P -> WholeRef P+ <: WholeRef +Q -> a-
 <input>:10:7: cannot convert WholeRef +Q+ <: WholeRef P-
  <input>:10:7: cannot convert Q+ <: P-
   <input>:10:7: cannot convert Q <: P
pinafore> :t qp !$ {p}
: WholeRef P
pinafore> :t qp !$ {q}
: WholeRef P
pinafore> <END>
