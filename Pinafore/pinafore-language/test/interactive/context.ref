pinafore> let opentype P
pinafore> let opentype Q
pinafore> let subtype P <: Q
pinafore> let p = openEntity @P !"p"
pinafore> let q = openEntity @Q !"q"
pinafore> let fp : P -> Boolean = fn _ => True
pinafore> let fq : Q -> Boolean = fn _ => True
pinafore> fp p
True
pinafore> fp q
<input>:1:1: cannot convert P -> Boolean+ <: Q -> a-
 <input>:1:1: cannot convert Q+ <: P-
  <input>:1:1: cannot convert Q <: P
pinafore> fq p
True
pinafore> fq q
True
pinafore> <END>
