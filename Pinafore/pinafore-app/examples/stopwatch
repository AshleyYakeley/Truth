#!/usr/bin/pinafore
let
import "pinafore-gnome";

datatype StopwatchState of
    StoppedState Duration;
    RunningState Time;
end;

toggleStopwatch: WholeModel +Time -> WholeModel StopwatchState -> Action Unit
= fn now, r => do
    n <- get now;
    oldstate <- get r;
    newstate <- pure $ oldstate >- match
        StoppedState d => RunningState $ negate.Duration d +.Time n;
        RunningState t => StoppedState $ n -.Time t
        end;
    r := newstate;
    end;

showStopwatch: StopwatchState -> Time -> Text
= fn state, n => state >- match
    StoppedState d => "[" <>.Text show d <>.Text "]";
    RunningState t => show $ n -.Time t
    end;

ui: WholeModel +Time -> WholeModel StopwatchState -> Element.GTK
= fn now, r => button.GTK {showStopwatch %r %now} {toggleStopwatch now r};

in do
    now <- newClock.Time $ Seconds 0.001;
    r <- newMem.WholeModel;
    r := StoppedState zero.Duration;
    run.GTK $ fn gtk => open.Window.GTK gtk (150,40) {"Stopwatch"} $ ui now r;
    end
