#!/usr/bin/pinafore
openLocal.Store {} >>= fn store =>
import "gnome"
with GTK.
let {
    dateNotesOf: Property Date Text =
        property @Date @Text !"example.calendar:dateNotes" store;

    ui: WholeModel Date -> Widget =
        fn r =>
        vertical.Widget [
            horizontal.Widget [
                button.Widget ap{"<"} ap{do {d <- get r; r := pred.Date d}},
                grow.Layout.Widget $ label.Widget ap{encode (unixAsText.Date "%A, %B %e, %Y") %r},
                button.Widget ap{">"} ap{do {d <- get r; r := succ.Date d}}
            ],
            grow.Layout.Widget $ textView.Widget (fromWhole.TextModel $ dateNotesOf !$ r)
        ];
} do {
    r <- newMem.WholeModel;
    d <- getNowLocal.Date;
    r := d;
    run $ fn gtk => open.Window gtk (300,400) ap{show %r} $ ui r;
}
