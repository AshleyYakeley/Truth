#!/usr/bin/pinafore
let
opentype T;
me = openEntity @T !"T";

func20 n a b c d e f = UI.label n;
func19 n a b c d e f = func20 n a b c d e f;
func18 n a b c d e f = func19 n a b c d e f;
func17 n a b c d e f = func18 n a b c d e f;
func16 n a b c d e f = func17 n a b c d e f;
func15 n a b c d e f = func16 n a b c d e f;
func14 n a b c d e f = func15 n a b c d e f;
func13 n a b c d e f = func14 n a b c d e f;
func12 n a b c d e f = func13 n a b c d e f;
func11 n a b c d e f = func12 n a b c d e f;
func10 n a b c d e f = func11 n a b c d e f;
func9 n a b c d e f = func10 n a b c d e f;
func8 n a b c d e f = func9 n a b c d e f;
func7 n a b c d e f = func8 n a b c d e f;
func6 n a b c d e f = func7 n a b c d e f;
func5 n a b c d e f = func6 n a b c d e f;
func4 n a b c d e f = func5 n a b c d e f;
func3 n a b c d e f = func4 n a b c d e f;
func2 n a b c d e f = func3 n a b c d e f;
func1 n a b c d e f = func2 n a b c d e f;
func0 n a b c d e f = func1 n a b c d e f;

w : Action UI.Window;
w = UI.openWindow (300,400) {"Test"} {[]} $ func0 (pureWhole "Text") False False False False False False;

prop0 = property @T @Text !"000";

act : Action Unit;
act = do
    debugMessage "ACTION: start";
    tstart <- getTimeMS;
    prop0 !$ {me} := "Example";
    tend <- getTimeMS;
    outputln $ "Time: " <> show (tend - tstart);
    debugMessage "ACTION: end";
    end

in do
    w1 <- w;
    act;
    act;
    UI.closeWindow w1;
    end
