#!/usr/bin/pinafore
openDefaultStore.Env >>= fn store =>
let
using Store;

# Define a type of entity for people
opentype Person;

# Properties of Person
name = property @Person @Text !"example:name" store;
mother = property @Person @Person !"example:mother" store;
father = property @Person @Person !"example:father" store;

# Root type and entity
opentype Root;
root = openEntity @Root !"example:root";

# The set of people connected to root.
people = property @Person @Root !"example:people" store !@ {root};

in
get (toList.FiniteSetModel (reverse.ModelOrder alphabetical.Order) (name !$$ people)) >>= fn l => for_ l outputLn.Env
