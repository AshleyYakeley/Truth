#!/usr/bin/pinafore
import "pinafore-media", "pinafore-gnome" in
with GTK., Colour., Cairo. in
let

# transform from (-1 .. +1,-1 .. +1)
scaleDrawing: WholeModel (Drawing a) -> WholeModel (Integer *: Integer -> Drawing a)
= fn rd => {fn (w,h) => let
    size = min w h;
    in with Drawing in translate (w / 2, h / 2) $ scale (size / 2, size / 2) %rd};

datatype Progress of
    No;
    Partial;
    Done;
end;

drawing: WholeModel Progress -> WholeModel +(Drawing Handler)
= fn ref =>
{
    with Drawing in
    scale (0.8,0.8) $ rotate (3/4 *.Number pi) $ width 0.1 $ concat
    [
        source navy $ %(toMaybe.WholeModel ref) >- match
            Nothing => pure $ onClick.Handler $ ref := Partial.Progress;
            Just No.Progress => pure $ onClick.Handler $ ref := Partial.Progress;
            Just Partial.Progress => concat
                [
                    with Path in fill $ concat [arc (0,0) 1 0 pi, close],
                    pure $ onClick.Handler $ ref := Done.Progress
                ];
            Just Done.Progress => concat
                [
                    with Path in fill $ concat [arc (0,0) 1 0 (2 *.Number pi)],
                    pure $ onClick.Handler $ ref := No.Progress
                ];
        end,
        with Path in stroke $ concat
        [
            arc (0,0) 1 0 (2 *.Number pi),
            moveTo (-1,0),
            lineTo (1,0)
        ]
    ]
};

in run $ fn gtk => do
    ref <- newMem.WholeModel;
    open.Window gtk (300,400) {"Drawing"} $ vertical.Widget
    [
        layoutGrow.Widget $ draw.Widget $ scaleDrawing $ drawing ref,
        layoutGrow.Widget $ draw.Widget $ scaleDrawing $ drawing ref
    ];
    end
